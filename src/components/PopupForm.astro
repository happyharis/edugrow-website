---
interface Props {
  options: {
    value: string;
    label: string;
  }[];
  buttonText?: string;
  onSubmitUrl?: string;
}

const {
  options,
  buttonText = "Submit",
  onSubmitUrl = "https://api.edugrow.org/submit",
} = Astro.props;
---

<div
  id="popupForm"
  class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
  <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4 relative">
    <!-- Close button -->
    <button
      id="closePopup"
      class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12">
        </path>
      </svg>
    </button>

    <!-- Title -->
    <div class="text-center mb-6">
      <h3 class="text-2xl font-bold text-gray-900">
        Book Your Free Discovery Call
      </h3>
      <p class="text-gray-600 mt-2">
        Fill in your details and we'll get back to you within 24 hours
      </p>
    </div>

    <!-- Form -->
    <form id="contactForm" class="space-y-4">
      <div class="grid grid-cols-2 gap-4">
        <div>
          <label for="firstName" class="block text-sm font-medium text-gray-700"
            >First Name</label
          >
          <input
            type="text"
            id="firstName"
            name="firstName"
            required
            class="mt-1 block w-full rounded-md border-2 border-gray-300 shadow-sm focus:border-black focus:ring-black"
          />
        </div>
        <div>
          <label for="lastName" class="block text-sm font-medium text-gray-700"
            >Last Name</label
          >
          <input
            type="text"
            id="lastName"
            name="lastName"
            required
            class="mt-1 block w-full rounded-md border-2 border-gray-300 shadow-sm focus:border-black focus:ring-black"
          />
        </div>
      </div>

      <div>
        <label for="email" class="block text-sm font-medium text-gray-700"
          >Email</label
        >
        <input
          type="email"
          id="email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border-2 border-gray-300 shadow-sm focus:border-black focus:ring-black"
        />
      </div>

      <div>
        <label for="phone" class="block text-sm font-medium text-gray-700"
          >Phone Number</label
        >
        <input
          type="tel"
          id="phone"
          name="phone"
          required
          class="mt-1 block w-full rounded-md border-2 border-gray-300 shadow-sm focus:border-black focus:ring-black"
        />
      </div>

      <div>
        <label for="interest" class="block text-sm font-medium text-gray-700"
          >I'm interested in</label
        >
        <select
          id="interest"
          name="interest"
          required
          class="mt-1 block w-full rounded-md border-2 border-gray-300 shadow-sm focus:border-black focus:ring-black">
          <option value="">Select an option</option>
          {
            options.map((option) => (
              <option value={option.value}>{option.label}</option>
            ))
          }
        </select>
      </div>

      <button
        type="submit"
        class="w-full bg-black text-white py-2 px-4 rounded-md hover:bg-gray-800 transition-colors">
        {buttonText}
      </button>
    </form>
  </div>
</div>

<script>
  // Show/hide popup
  function togglePopup(show: boolean) {
    const popup = document.getElementById("popupForm");
    if (popup) {
      popup.style.display = show ? "flex" : "none";
    }
  }

  // Close button handler
  const closeBtn = document.getElementById("closePopup");
  if (closeBtn) {
    closeBtn.addEventListener("click", () => togglePopup(false));
  }

  // Close on outside click
  window.addEventListener("click", (e) => {
    const popup = document.getElementById("popupForm");
    if (e.target === popup) {
      togglePopup(false);
    }
  });

  // Form submission
  const form = document.getElementById("contactForm");
  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      const data = Object.fromEntries(formData);

      try {
        // Replace with your actual submission logic
        console.log("Form data:", data);
        togglePopup(false);
      } catch (error) {
        console.error("Error submitting form:", error);
      }
    });
  }
</script>
